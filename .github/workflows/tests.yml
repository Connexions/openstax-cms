name: CI

on: [push]

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements/dev.txt
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run Django tests
      run: python manage.py test --settings=openstax.settings.test
      env:
        SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
        SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
        SALESFORCE_SECURITY_TOKEN: ${{ secrets.SALESFORCE_SECURITY_TOKEN }}
        EVENTBRITE_API_KEY: ${{ secrets.EVENTBRITE_API_KEY }}
        EVENTBRITE_API_SECRET: ${{ secrets.EVENTBRITE_API_SECRET }}
        EVENTBRITE_API_PRIVATE_TOKEN: ${{ secrets.EVENTBRITE_API_PRIVATE_TOKEN }}
        EVENTBRITE_API_PUBLIC_TOKEN: ${{ secrets.EVENTBRITE_PUBLIC_TOKEN }}
        SOCIAL_AUTH_OPENSTAX_KEY: ${{ secrets.SOCIAL_AUTH_OPENSTAX_KEY }}
        SOCIAL_AUTH_OPENSTAX_SECRET: ${{ secrets.SOCIAL_AUTH_OPENSTAX_SECRET }}
    - uses: codecov/codecov-action@v3.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
