name: Test

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0' # weekly

permissions: read-all

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements/dev.txt

      - name: Run Django tests
        env:
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
          SALESFORCE_SECURITY_TOKEN: ${{ secrets.SALESFORCE_SECURITY_TOKEN }}
          EVENTBRITE_API_KEY: ${{ secrets.EVENTBRITE_API_KEY }}
          EVENTBRITE_API_SECRET: ${{ secrets.EVENTBRITE_API_SECRET }}
          EVENTBRITE_API_PRIVATE_TOKEN: ${{ secrets.EVENTBRITE_API_PRIVATE_TOKEN }}
          EVENTBRITE_API_PUBLIC_TOKEN: ${{ secrets.EVENTBRITE_PUBLIC_TOKEN }}
          SOCIAL_AUTH_OPENSTAX_KEY: ${{ secrets.SOCIAL_AUTH_OPENSTAX_KEY }}
          SOCIAL_AUTH_OPENSTAX_SECRET: ${{ secrets.SOCIAL_AUTH_OPENSTAX_SECRET }}
          run: |
            python manage.py test --verbosity=2 --settings=openstax.settings.test
