# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-18 14:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0010_change_on_delete_behaviour'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtaildocs', '0004_capitalizeverbose'),
        ('allies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('university', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('senior_author', models.BooleanField(default=False)),
                ('display_at_top', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cnx_id', models.CharField(help_text='This is used to pull relevant information from CNX.', max_length=255)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('short_description', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Description shown on Subject page.')),
                ('description', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Description shown on Book Detail page.')),
                ('publish_date', models.DateField(blank=True, editable=False, null=True)),
                ('isbn_10', models.IntegerField(blank=True, null=True)),
                ('isbn_13', models.CharField(blank=True, max_length=255, null=True)),
                ('license_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('license_version', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('license_url', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('cover_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BookAlly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_link_url', models.URLField(blank=True, help_text='Call to Action Link')),
                ('book_link_text', models.CharField(help_text='Call to Action Text', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BookIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('page_description', wagtail.wagtailcore.fields.RichTextField()),
                ('dev_standards_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_standard_1_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_standard_1_description', wagtail.wagtailcore.fields.RichTextField()),
                ('dev_standard_2_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_standard_2_description', wagtail.wagtailcore.fields.RichTextField()),
                ('dev_standard_3_heading', models.CharField(blank=True, max_length=255, null=True)),
                ('dev_standard_3_description', wagtail.wagtailcore.fields.RichTextField()),
                ('subject_list_heading', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FacultyResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
            ],
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_text', wagtail.wagtailcore.fields.RichTextField()),
                ('quote_author', models.CharField(max_length=255)),
                ('quote_author_school', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('description', wagtail.wagtailcore.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentResources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_external', models.URLField(blank=True, verbose_name='External link')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BookAllies',
            fields=[
                ('bookally_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='books.BookAlly')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('books.bookally', models.Model),
        ),
        migrations.CreateModel(
            name='BookFacultyResources',
            fields=[
                ('facultyresources_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='books.FacultyResources')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('books.facultyresources', models.Model),
        ),
        migrations.CreateModel(
            name='BookQuotes',
            fields=[
                ('quotes_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='books.Quotes')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('books.quotes', models.Model),
        ),
        migrations.CreateModel(
            name='BookStudentResources',
            fields=[
                ('studentresources_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='books.StudentResources')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=('books.studentresources', models.Model),
        ),
        migrations.AddField(
            model_name='studentresources',
            name='link_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document'),
        ),
        migrations.AddField(
            model_name='studentresources',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='studentresources',
            name='resource',
            field=models.ForeignKey(help_text='Manage resources through snippets.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='books.Resource'),
        ),
        migrations.AddField(
            model_name='facultyresources',
            name='link_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.Document'),
        ),
        migrations.AddField(
            model_name='facultyresources',
            name='link_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.Page'),
        ),
        migrations.AddField(
            model_name='facultyresources',
            name='resource',
            field=models.ForeignKey(help_text='Manage resources through snippets.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='books.Resource'),
        ),
        migrations.AddField(
            model_name='bookally',
            name='ally',
            field=models.ForeignKey(help_text='Manage allies through snippets.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allies_ally', to='allies.Ally'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='books.Subject'),
        ),
        migrations.AddField(
            model_name='authors',
            name='book',
            field=modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='book_contributing_authors', to='books.Book'),
        ),
        migrations.AddField(
            model_name='bookstudentresources',
            name='book_student_resource',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_student_resources', to='books.Book'),
        ),
        migrations.AddField(
            model_name='bookquotes',
            name='quote',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_quotes', to='books.Book'),
        ),
        migrations.AddField(
            model_name='bookfacultyresources',
            name='book_faculty_resource',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_faculty_resources', to='books.Book'),
        ),
        migrations.AddField(
            model_name='bookallies',
            name='book_ally',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_allies', to='books.Book'),
        ),
    ]
