# Generated by Django 2.0.2 on 2018-05-15 22:12

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import news.models
import snippets.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    replaces = [('news', '0001_initial'), ('news', '0002_newsarticle_tags'), ('news', '0003_auto_20160517_1521'), ('news', '0004_newsarticle_press_kit'), ('news', '0005_auto_20160523_1023'), ('news', '0006_auto_20160523_1042'), ('news', '0007_auto_20160523_1049'), ('news', '0008_newsarticle_author'), ('news', '0009_auto_20160614_1024'), ('news', '0010_auto_20160614_1032'), ('news', '0011_auto_20160614_1034'), ('news', '0012_auto_20160614_1037'), ('news', '0013_auto_20160616_1033'), ('news', '0014_auto_20160617_1140'), ('news', '0015_remove_newsarticle_heading'), ('news', '0016_newsarticle_heading'), ('news', '0017_auto_20161018_0757'), ('news', '0018_auto_20161025_1300'), ('news', '0019_experts_expertspr_pressindex_pressrelease'), ('news', '0020_auto_20180509_1016'), ('news', '0021_auto_20180515_1603'), ('news', '0022_auto_20180515_1612'), ('news', '0023_missionstatement_missionstatements'), ('news', '0024_remove_newsmention_source'), ('news', '0025_auto_20180515_1619'), ('news', '0026_auto_20180515_1624'), ('news', '0027_auto_20180515_1638'), ('news', '0028_remove_pressindex_news_mentions')]

    initial = True

    dependencies = [
        ('wagtailimages', '0019_delete_filter'),
        ('wagtaildocs', '0007_merge'),
        ('wagtailimages', '0012_copy_image_permissions_to_collections'),
        ('taggit', '0002_auto_20150616_2121'),
        ('snippets', '0014_auto_20180509_1010'),
        ('wagtailcore', '0023_alter_page_revision_on_delete_behaviour'),
        ('wagtailcore', '0040_page_draft_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='Post date')),
                ('body', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('aligned_image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock()), ('alignment', news.models.ImageFormatChoiceBlock())), icon='image', label='Aligned image')), ('pullquote', wagtail.core.blocks.StructBlock((('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock())))), ('aligned_html', wagtail.core.blocks.StructBlock((('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', news.models.HTMLAlignmentChoiceBlock())), icon='code', label='Raw HTML')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media', label='Embed Media URL'))))),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='news.NewsArticleTag', to='taggit.Tag', verbose_name='Tags')),
                ('featured_image', models.ForeignKey(blank=True, help_text='Image should be 1200 x 600', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('pin_to_top', models.BooleanField(default=False)),
                ('subheading', models.CharField(blank=True, max_length=250, null=True)),
                ('author', models.CharField(default='', max_length=250)),
                ('heading', models.CharField(default='', help_text='Heading displayed on website', max_length=250)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
                ('press_kit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='news.NewsArticle')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_newsarticletag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('title', models.CharField(max_length=255)),
                ('blurb', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PressIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
                ('press_kit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.Document')),
                ('experts_blurb', models.TextField(default='')),
                ('experts_heading', models.CharField(default='', max_length=255)),
                ('press_inquiry_email', models.EmailField(default='', max_length=254)),
                ('press_inquiry_name', models.CharField(blank=True, max_length=255, null=True)),
                ('press_inquiry_phone', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PressRelease',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='PR date')),
                ('heading', models.CharField(help_text='Heading displayed on website', max_length=250)),
                ('subheading', models.CharField(blank=True, max_length=250, null=True)),
                ('author', models.CharField(max_length=250)),
                ('body', wagtail.core.fields.StreamField((('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('aligned_image', wagtail.core.blocks.StructBlock((('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock()), ('alignment', news.models.ImageFormatChoiceBlock())), icon='image', label='Aligned image')), ('pullquote', wagtail.core.blocks.StructBlock((('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock())))), ('aligned_html', wagtail.core.blocks.StructBlock((('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', news.models.HTMLAlignmentChoiceBlock())), icon='code', label='Raw HTML')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media', label='Embed Media URL'))))),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('excerpt', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ExpertsBios',
            fields=[
                ('experts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='news.Experts')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('experts_bios', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='experts_bios', to='news.PressIndex')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('news.experts', models.Model),
        ),
        migrations.RenameField(
            model_name='experts',
            old_name='blurb',
            new_name='bio',
        ),
        migrations.AddField(
            model_name='experts',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.CreateModel(
            name='MissionStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MissionStatements',
            fields=[
                ('missionstatement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='news.MissionStatement')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('mission_statements', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='mission_statements', to='news.PressIndex')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('news.missionstatement', models.Model),
        ),
        migrations.AddField(
            model_name='pressindex',
            name='news_mentions',
            field=wagtail.core.fields.StreamField((('source', news.models.NewsSourceChooserBlock(snippets.models.NewsSource)), ('url', wagtail.core.blocks.URLBlock(required=False)), ('headline', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))), blank=True, null=True),
        ),
        migrations.CreateModel(
            name='NewsMention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mention', wagtail.core.fields.StreamField((('source', news.models.NewsSourceChooserBlock(snippets.models.NewsSource)), ('url', wagtail.core.blocks.URLBlock(required=False)), ('headline', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))), blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NewsMentions',
            fields=[
                ('newsmention_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='news.NewsMention')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('news_mentions', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_mentions', to='news.PressIndex')),
            ],
            options={
                'abstract': False,
                'ordering': ['sort_order'],
            },
            bases=('news.newsmention', models.Model),
        ),
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.RemoveField(
            model_name='newsmention',
            name='mention',
        ),
        migrations.AddField(
            model_name='newsmention',
            name='date',
            field=models.DateField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='newsmention',
            name='headline',
            field=models.CharField(default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='newsmention',
            name='url',
            field=models.URLField(default='http://google.com'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='newsmention',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='news.NewsSource'),
        ),
        migrations.RemoveField(
            model_name='pressindex',
            name='news_mentions',
        ),
    ]
